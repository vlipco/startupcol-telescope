{"version":3,"file":"/packages/telescope-tags.js","sources":["telescope-tags/lib/tags.js","telescope-tags/lib/server/publications.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mC;AACA,O;AACA,iB;AACA,kB;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,I;AACA,S;AACA,gB;AACA,I;AACA,S;AACA,gB;AACA,Q;AACA,G;;AAEA,kD;AACA,wB;AACA,G;;AAEA,gC;AACA,6C;AACA,U;AACA,8C;AACA,4C;AACA,I;AACA,C;;AAEA,2C;AACA,kB;AACA,6B;AACA,U;AACA,G;AACA,E;AACA,+C;AACA,kC;;AAEA,wF;AACA,qB;AACA,G;AACA,+B;AACA,qB;AACA,6B;AACA,oB;AACA,K;AACA,G;AACA,E;;AAEA,kD;AACA,6B;AACA,qD;AACA,mC;AACA,+D;AACA,K;AACA,oB;AACA,C;;AAEA,qD;AACA,mD;;AAEA,4B;AACA,oB;AACA,uB;AACA,uB;AACA,uB;AACA,K;;AAEA,kB;AACA,iC;AACA,2B;AACA,oD;AACA,mG;AACA,iD;AACA,2B;AACA,K;AACA,K;AACA,G;;AAEA,gC;AACA,uC;AACA,E;;;;;;;;;;;;;;;;;;ACjFA,yC;AACA,+B;AACA,6B;AACA,G;AACA,Y;AACA,G","sourcesContent":["categorySchema = new SimpleSchema({\n _id: {\n    type: String,\n    optional: true\n  },\n  order: {\n    type: Number,\n    optional: true\n  },\n  slug: {\n    type: String\n  },\n  name: {\n    type: String\n  },    \n});\n\nCategories = new Meteor.Collection(\"categories\", {\n  schema: categorySchema\n});\n\n// category post list parameters\nviewParameters.category = function (terms) { \n  return {\n    find: {'categories.slug': terms.category},\n    options: {sort: {sticky: -1, score: -1}}\n  };\n}\n\n// push \"categories\" modules to postHeading\npostHeading.push({\n  template: 'postCategories',\n  order: 3\n});\n  \n// push \"categoriesMenu\" template to primaryNav\nprimaryNav.push('categoriesMenu');\n\n// push \"categories\" property to addToPostSchema, so that it's later added to postSchema\naddToPostSchema.push(\n  {\n    propertyName: 'categories',\n    propertySchema: {\n      type: [categorySchema],\n      optional: true\n    }\n  }\n);\n\nvar getCheckedCategories = function (properties) {\n  properties.categories = [];\n  $('input[name=category]:checked').each(function() {\n    var categoryId = $(this).val();\n    properties.categories.push(Categories.findOne(categoryId));\n  });\n  return properties;\n}\n\npostSubmitClientCallbacks.push(getCheckedCategories);\npostEditClientCallbacks.push(getCheckedCategories);\n\nMeteor.startup(function () {\n  Categories.allow({\n    insert: isAdminById\n  , update: isAdminById\n  , remove: isAdminById\n  });\n\n  Meteor.methods({\n    category: function(category){\n      console.log(category)\n      if (!Meteor.user() || !isAdmin(Meteor.user()))\n        throw new Meteor.Error(i18n.t('You need to login and be an admin to add a new category.'));\n      var categoryId=Categories.insert(category);\n      return category.name;\n    }\n  });\n});\n\ngetCategoryUrl = function(slug){\n  return getSiteUrl()+'category/'+slug;\n};","Meteor.publish('categories', function() {\n  if(canViewById(this.userId)){\n    return Categories.find();\n  }\n  return [];\n});"]}