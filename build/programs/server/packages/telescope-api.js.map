{"version":3,"file":"/packages/telescope-api.js","sources":["telescope-api/lib/server/api.js","telescope-api/lib/server/routes.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kC;AACA,iB;AACA,gG;;AAEA,sG;AACA,gC;AACA,sB;AACA,uB;AACA,yD;AACA,yB;AACA,yB;AACA,c;AACA,mB;AACA,M;;AAEA,iB;AACA,kC;;AAEA,gB;AACA,yC;;AAEA,qD;AACA,2C;;AAEA,2B;AACA,K;;AAEA,gC;AACA,E;;;;;;;;;;;;;;;;;;AC5BA,4B;;AAEA,yB;;AAEA,uB;AACA,sB;AACA,2B;AACA,0B;AACA,gD;AACA,6C;AACA,4B;AACA,O;AACA,O;;AAEA,K;;AAEA,G","sourcesContent":["serveAPI = function(limitSegment){\n  var posts = [];\n  var limit = typeof limitSegment === 'undefined' ? 20 : limitSegment // default limit: 20 posts\n\n  Posts.find({status: STATUS_APPROVED}, {sort: {postedAt: -1}, limit: limit}).forEach(function(post) {\n    var url = getPostLink(post);\n    var properties = {\n     title: post.title,\n     headline: post.title, // for backwards compatibility\n     author: post.author,\n     date: post.postedAt,\n     url: url,\n     guid: post._id\n    };\n\n    if(post.body)\n      properties.body = post.body;\n\n    if(post.url)\n      properties.domain = getDomain(url);\n\n    if(twitterName = getTwitterNameById(post.userId))\n      properties.twitterName = twitterName;\n\n    posts.push(properties);\n  });\n\n  return JSON.stringify(posts); \n};","Meteor.startup(function () {\n\n  Router.map(function() {\n\n    this.route('api', {\n      where: 'server',\n      path: '/api/:limit?',\n      action: function() {\n        var limit = parseInt(this.params.limit);\n        this.response.write(serveAPI(limit));\n        this.response.end();\n      }\n    });\n\n  });\n\n});"]}