{"version":3,"file":"/packages/telescope-base.js","sources":["telescope-base/lib/base.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,2B;;AAEA,2F;AACA,qB;AACA,yB;AACA,yB;;AAEA,2C;AACA,W;AACA,G;AACA,uB;AACA,gB;AACA,I;AACA,G;AACA,uB;AACA,gB;AACA,I;AACA,G;AACA,wB;AACA,iB;AACA,I;AACA,G;AACA,0B;AACA,mB;AACA,M;AACA,E;;AAEA,2C;AACA,c;;AAEA,iD;AACA,0B;;AAEA,wE;AACA,wC;;AAEA,4C;;AAEA,8C;AACA,mB;;AAEA,uC;AACA,U;AACA,4C;AACA,I;AACA,C;;AAEA,uC;AACA,U;AACA,+C;AACA,I;AACA,C;;AAEA,wC;AACA,U;AACA,gD;AACA,I;AACA,C;;AAEA,2C;AACA,U;AACA,uB;AACA,oC;AACA,I;AACA,C;;AAEA,0C;AACA,U;AACA,W;AACA,iB;AACA,2B;AACA,yB;AACA,O;AACA,M;AACA,c;AACA,uC;AACA,K;AACA,I;AACA,C;;AAEA,mB;;AAEA,iB;;AAEA,gC;AACA,mB;AACA,c;AACA,gB;AACA,e;AACA,gB;AACA,kB;AACA,iB;AACA,e;AACA,iB;AACA,e;AACA,E;;AAEA,e;AACA,G;AACA,2B;AACA,yB;AACA,I;AACA,G;AACA,4B;AACA,0B;AACA,I;AACA,G;AACA,6B;AACA,6B;AACA,I;AACA,G;AACA,4B;AACA,2B;AACA,G;AACA,E;;AAEA,e;AACA,G;AACA,0B;AACA,Y;AACA,I;AACA,G;AACA,4B;AACA,Y;AACA,G;AACA,C;;AAEA,Y;AACA,G;AACA,yB;AACA,Y;AACA,I;AACA,G;AACA,iC;AACA,Y;AACA,M;AACA,G;AACA,2B;AACA,Y;AACA,G;AACA,C;AACA,6E;;AAEA,iC;AACA,+B;AACA,+B;;AAEA,+B;AACA,6B;;AAEA,gD;AACA,gD;;AAEA,gD;;AAEA,qF;;;AAGA,c;;AAEA,+B;AACA,6E;AACA,oD;AACA,C;;AAEA,kF;;AAEA,iB;AACA,yE;AACA,E","sourcesContent":["// Initialize common arrays\n\n// array containing properties to be added to the post/settings/comments schema on startup.\naddToPostSchema = [];\naddToCommentsSchema = [];\naddToSettingsSchema = [];\n\n// array containing items in the views menu\nviewNav = [\n  {\n    route: 'posts_top',\n    label: 'Top'\n  },\n  {\n    route: 'posts_new',\n    label: 'New'\n  },\n  {\n    route: 'posts_best',\n    label: 'Best'\n  },\n  {\n    route: 'posts_digest',\n    label: 'Digest'\n  }   \n];\n\n// array containing items in the admin menu\nadminNav = [];\n\n// array containing subscriptions to be preloaded\npreloadSubscriptions = [];\n\n// array containing nav items; initialize with views menu and admin menu\nprimaryNav = ['viewsMenu', 'adminMenu'];\n\nsecondaryNav = ['userMenu', 'submitButton'];\n\n// object containing post list view parameters\nviewParameters = {}\n\nviewParameters.top = function (terms) {\n  return {\n    options: {sort: {sticky: -1, score: -1}}\n  };\n}\n\nviewParameters.new = function (terms) {\n  return {\n    options: {sort: {sticky: -1, postedAt: -1}}\n  };\n}\n\nviewParameters.best = function (terms) {\n  return {\n    options: {sort: {sticky: -1, baseScore: -1}}\n  };\n}\n\nviewParameters.pending = function (terms) {\n  return {\n    find: {status: 1}, \n    options: {sort: {createdAt: -1}}\n  };\n}\n\nviewParameters.digest = function (terms) {\n  return {\n    find: {\n      postedAt: {\n        $gte: terms.after, \n        $lt: terms.before\n      }\n    },\n    options: {\n      sort: {sticky: -1, baseScore: -1}\n    }\n  };\n}\n\nfooterModules = [];\n\nheroModules = [];\n\n// array containing post modules\nmodulePositions = [\n  'left-left',\n  'left-center',\n  'left-right',\n  'center-left',\n  'center-center',\n  'center-right',\n  'right-left',\n  'right-center',\n  'right-right'\n];\n\npostModules = [\n  {\n    template: 'postUpvote',\n    position: 'left-left'\n  },\n  {\n    template: 'postActions',\n    position: 'left-right'\n  },\n  {\n    template: 'postContent', \n    position: 'center-center'\n  },\n  {\n    template: 'postDiscuss',\n    position: 'right-right'\n  }\n];\n\npostHeading = [\n  {\n    template: 'postTitle',\n    order: 1\n  },\n  {\n    template: 'postDomain', \n    order: 5\n  }\n]\n\npostMeta = [\n  {\n    template: 'postMeta',\n    order: 1\n  },\n  {\n    template: 'postCommentsLink',\n    order: 3\n  },  \n  {\n    template: 'postAdmin', \n    order: 5\n  }\n]\n// ------------------------------ Callbacks ------------------------------ //\n\npostSubmitRenderedCallbacks = [];\npostSubmitClientCallbacks = [];\npostSubmitServerCallbacks = [];\n\npostEditRenderedCallbacks = [];\npostEditClientCallbacks = [];\n\ncommentEditClientCallbacks = []; // not used yet\ncommentEditServerCallbacks = []; // not used yet\n\ncommentEditClientCallbacks = []; // not used yet\n\n// ------------------------------ Dynamic Templates ------------------------------ //\n\n\ntemplates = {}\n\ngetTemplate = function (name) {\n  // if template has been overwritten, return this; else return template name\n  return !!templates[name] ? templates[name] : name;\n}\n\n// ------------------------------ Theme Settings ------------------------------ //\n\nthemeSettings = {\n  'useDropdowns': true // whether or not to use dropdown menus in a theme\n};"]}