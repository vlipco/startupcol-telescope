{"version":3,"file":"/packages/accounts-t9n.js","sources":["accounts-t9n/t9n.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;IAAG,MAAM,CAAC,QAAV;AACE,MAAG,OAAO,CAAC,EAAX;AACE,iBAAa,OAAO,CAAC,EAAE,CAAC,UAAxB,CADF;;EAGA,UAAU,CAAC,cAAX,CAA0B,KAA1B,EAAiC,SAAC,CAAD;WAC/B,GAAG,CAAC,GAAJ,CAAQ,CAAR,EAD+B;GAAjC,CAHA,CADF;;;;mBASE;;KAAC,KAAD,GAAO,EAAP;;EACA,GAAC,gBAAD,GAAkB,IADlB;;EAEA,GAAC,SAAD,GAAW,EAFX;;EAGA,GAAC,IAAD,GAAU,QAAI,CAAC,UAAL,EAHV;;EAIA,GAAC,cAAD,GAAiB,GAJjB;;EAKA,GAAC,eAAD,GAAkB,GALlB;;EAOA,GAAC,IAAD,GAAM,SAAC,QAAD,EAAW,GAAX;AACJ,QAAG,KAAE,KAAK,UAAV;AACE,UAAC,KAAK,UAAN,GAAkB,EAAlB,CADF;;IAEA,IAAC,YAAD,CAAa,QAAb,EAAuB,EAAvB,EAA2B,KAA3B,EAAkC,GAAlC,CAFA;WAGA,IAAC,IAAG,CAAC,OAAL,GAJI;GAPN;;EAaA,GAAC,IAAD,GAAM,SAAC,KAAD;AACJ;QAAC,IAAG,CAAC,MAAL;AACA,QAAG,iBAAgB,QAAnB;AACE,aAAO,EAAP,CADF;KADA;4DAGkB,iBAAlB,8DAC2B,iBAD3B,IAEE,IAAC,cAAD,GAAiB,KAAjB,GAAyB,IAAC,gBANxB;GAbN;;EAqBA,GAAC,YAAD,GAAe,SAAC,QAAD,EAAW,MAAX,EAAmB,GAAnB,EAAwB,GAAxB;AACb;QAAG,eAAc,QAAjB;aACE,IAAC,KAAK,UAAU,QAAhB,GAA0B,IAD5B;WAEK,IAAG,eAAc,QAAjB;AACH,UAAG,GAAH;AACE,iBAAS,SAAS,GAAlB,CADF;;AAEA;;;AACE,0BAAC,YAAD,CAAa,QAAb,EAAuB,SAAS,GAAhC,EAAqC,IAArC,EAA2C,KAA3C,GADF;;sBAHG;KAHQ;GArBf;;;;IATF;;IAuCC,IAAD,GAAO,GAvCP;;IAwCC,IAAD,GAAO,SAAC,CAAD;SAAO,GAAG,CAAC,GAAJ,CAAQ,CAAR,EAAP;CAxCP;A","sourcesContent":["if Meteor.isClient\n  if Package.ui\n    Handlebars = Package.ui.Handlebars\n\n  Handlebars.registerHelper 't9n', (x) ->\n    T9n.get(x)\n\nclass T9n\n\n  @maps: {}\n  @defaultLanguage: 'en'\n  @language: ''\n  @dep: new Deps.Dependency()\n  @missingPrefix = \">\"\n  @missingPostfix = \"<\"\n  \n  @map: (language, map) ->\n    if(!@maps[language]) \n      @maps[language] = {}\n    @registerMap(language, '', false, map)\n    @dep.changed()\n\n  @get: (label) ->\n    @dep.depend()\n    if typeof label != 'string' \n      return ''\n    @maps[@language]?[label] ||\n      @maps[@defaultLanguage]?[label] ||\n      @missingPrefix + label + @missingPostfix\n    \n  @registerMap = (language, prefix, dot, map) ->\n    if typeof map == 'string' \n      @maps[language][prefix] = map\n    else if typeof map == 'object'\n      if dot \n        prefix = prefix + '.'\n      for key, value of map\n        @registerMap(language, prefix + key, true, value)        \n        \n@T9n = T9n\n@t9n = (x) -> T9n.get(x)\n"]}